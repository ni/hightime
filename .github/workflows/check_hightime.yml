name: Check hightime

on:
  workflow_call:
  workflow_dispatch:

jobs:
  check_hightime:
    name: Check hightime
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Set up Python
        uses: ni/python-actions/setup-python@9768589f3e50672173dad75a6fc181e4a85d33fa # v0.7.0
        id: setup-python
      - name: Set up Poetry
        uses: ni/python-actions/setup-poetry@9768589f3e50672173dad75a6fc181e4a85d33fa # v0.7.0
      - name: Check for lock changes
        run: poetry check --lock
      - name: Cache virtualenv
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: .venv
          key: hightime-${{ runner.os }}-py${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install hightime
        run: poetry install -v
      - name: Lint
        run: poetry run ni-python-styleguide lint
      - name: Mypy static analysis (Linux)
        run:  poetry run mypy
      - name: Mypy static analysis (Windows)
        run:  poetry run mypy --platform win32
      - name: Bandit security checks
        run:  poetry run bandit -c pyproject.toml -r hightime
      # - name: Add virtualenv to the path for pyright-action
      #   run: echo "$(poetry env info --path)/bin" >> $GITHUB_PATH
      # - name: Pyright static analysis (Linux)
      #   uses: jakebailey/pyright-action@b5d50e5cde6547546a5c4ac92e416a8c2c1a1dfe # v2.3.2
      #   with:
      #     python-platform: Linux
      #     version: PATH
      # - name: Pyright static analysis (Windows)
      #   uses: jakebailey/pyright-action@b5d50e5cde6547546a5c4ac92e416a8c2c1a1dfe # v2.3.2
      #   with:
      #     python-platform: Windows
      #     version: PATH
